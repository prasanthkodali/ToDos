{"version":3,"sources":["Category.jsx","beep.js","CategoryList.jsx","Task.jsx","TaskList.jsx","App.js","index.js"],"names":["Category","props","className","selected","onClick","onSelect","id","name","beep","CategoryList","React","useState","isAddOpen","setIsAddOpen","newCategoryName","setNewCategoryName","handleSaveClick","Audio","play","onAdd","list","map","category","isOpen","preferPlace","children","title","body","type","maxLength","autoFocus","onChange","evt","target","value","onKeyPress","key","onOuterAction","Task","completed","checked","onCheck","htmlFor","onDelete","TaskList","newTaskName","setNewTaskName","task","getTasksByCategory","categoryId","data","tasks","filter","App","categories","selectedCategoryId","setSelectedCategoryId","visibleTasks","setVisibleTasks","selectedCategory","find","handleCategorySelect","taskList","Date","getTime","newCategory","push","taskId","selectedTask","console","log","selectedTaskIdx","findIndex","newTaskList","splice","newTask","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce75d224.chunk.js","sourcesContent":["import React from 'react';\nimport './Category.scss';\n\nfunction Category(props) {\n  return (\n    <div\n      className={`Category ${props.selected ? 'selected' : ''}`}\n      onClick={() => props.onSelect(props.id)}\n    >\n      {props.name}\n    </div>\n  );\n}\n\nexport default Category;\n","const beep = 'data:audio/wav;base64,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qJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU=';\nexport default beep;","import React from 'react';\nimport Popover from 'react-popover';\nimport Category from './Category';\nimport \"./CategoryList.scss\";\nimport beep from './beep.js';\n\nfunction CategoryList(props) {\n\n  const [isAddOpen, setIsAddOpen] = React.useState(false);\n  const [newCategoryName, setNewCategoryName] = React.useState('');\n\n  const handleAddClick = () => {\n    setIsAddOpen(true);\n  };\n  \n  const handleNewCategoryNameChange = (evt) => {\n    setNewCategoryName(evt.target.value);\n  }\n\n  const handleNewCategoryKeyPress = (evt) => {\n    if (evt.key === 'Enter') {\n      handleSaveClick();\n    }\n  }\n\n  const handleSaveClick = () => {\n    if (newCategoryName === '') {\n      var snd = new Audio(beep);\n      snd.play();\n    } else {\n      setIsAddOpen(false);\n      props.onAdd({\n        name: newCategoryName\n      });\n      setNewCategoryName('');\n    }\n  }\n\n  const handlePopoverOuterAction = () => {\n    setIsAddOpen(false);\n    setNewCategoryName('');\n  }\n\n  return (\n    <div className=\"Categories\">\n      {props.list.map((category) => \n        <Category\n          key={category.id}\n          {...category}\n          selected={category.id === props.selected}\n          onSelect={props.onSelect}\n        />\n      )}\n      <div className=\"horiz-spacer\" />\n      <div className=\"footer\">\n        <Popover\n          isOpen={isAddOpen}\n          preferPlace=\"above\"\n          children={\n            <button\n              className=\"add\"\n              title=\"Add New Category\"\n              onClick={handleAddClick}\n            >\n              +\n            </button>\n          }\n          body={\n            <div className=\"add-category popover\">\n              <input\n                type=\"text\"\n                maxLength=\"24\"\n                autoFocus\n                onChange={handleNewCategoryNameChange}\n                onKeyPress={handleNewCategoryKeyPress}\n              />\n              <button\n                className=\"apply\"\n                title=\"Save\"\n                onClick={handleSaveClick}\n              >\n                &#10003;\n              </button>\n            </div>\n          }\n          onOuterAction={handlePopoverOuterAction}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default CategoryList;\n","import React from 'react';\nimport './Task.scss';\n\nfunction Task(props) {\n  return (\n    <div className={`Task ${props.completed ? 'completed' : ''}`}>\n      <span>\n        <input\n          type=\"checkbox\"\n          id={`Task_${props.id}`}\n          title={`${props.completed ? 'Mark as Incomplete' : 'Mark as Complete'}`}\n          checked={props.completed}\n          onChange={() => props.onCheck(props.id)}\n        />\n        <label\n          htmlFor={`Task_${props.id}`}\n          className=\"name\"\n          title={`${props.completed ? 'Mark as Incomplete' : 'Mark as Complete'}`}\n        >\n          {props.name}\n        </label>\n      </span>\n      <button\n        className=\"delete\"\n        title=\"Delete Task\"\n        onClick={() => props.onDelete(props.id)}\n      >\n        &times;\n      </button>\n    </div>\n  );\n}\n\nexport default Task;\n","import React from 'react';\nimport Popover from 'react-popover';\nimport Task from './Task';\nimport './TaskList.scss';\nimport beep from './beep.js';\n\nfunction TaskList(props) {\n\n  const [isAddOpen, setIsAddOpen] = React.useState(false);\n  const [newTaskName, setNewTaskName] = React.useState('');\n\n  const handleAddClick = () => {\n    setIsAddOpen(true);\n  };\n\n  const handleNewTaskNameChange = (evt) => {\n    setNewTaskName(evt.target.value);\n  }\n\n  const handleNewTaskKeyPress = (evt) => {\n    if (evt.key === 'Enter') {\n      handleSaveClick();\n    }\n  }\n\n  const handleSaveClick = () => {\n    if (newTaskName === '') {\n      var snd = new Audio(beep);\n      snd.play();\n    } else {\n      setIsAddOpen(false);\n      props.onAdd({\n        name: newTaskName,\n        completed: false\n      });\n      setNewTaskName('');\n    }\n  }\n\n  const handlePopoverOuterAction = () => {\n    setIsAddOpen(false);\n    setNewTaskName('');\n  }\n\n  return (\n    <div className=\"Tasks\">\n      <div className=\"title\">\n        {props.title}\n      </div>\n      {props.list.map((task) => \n        <Task\n          key={task.id}\n          {...task}\n          onCheck={props.onCheck}\n          onDelete={props.onDelete}\n        />\n      )}\n      <div className=\"horiz-spacer\" />\n      <div className=\"footer\">\n        <Popover\n          isOpen={isAddOpen}\n          preferPlace=\"left\"\n          children={\n            <button\n              className=\"add\"\n              title=\"Add New Task\"\n              onClick={handleAddClick}\n            >\n              +\n            </button>\n          }\n          body={\n            <div className=\"add-task popover\">\n              <input\n                type=\"text\"\n                maxLength=\"48\"\n                autoFocus\n                onChange={handleNewTaskNameChange}\n                onKeyPress={handleNewTaskKeyPress}\n              />\n              <button\n                className=\"apply\"\n                title=\"Save\"\n                onClick={handleSaveClick}\n              >\n                &#10003;\n              </button>\n            </div>\n          }\n          onOuterAction={handlePopoverOuterAction}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default TaskList;\n","import React from 'react';\nimport './App.scss';\nimport CategoryList from './CategoryList';\nimport TaskList from './TaskList';\n\nimport data from './data.json';\n\nfunction getTasksByCategory(categoryId) {\n  const tasks = data.tasks;\n  return tasks.filter((task) => (task.categoryId === categoryId));\n}\n\nfunction getCategoryById(categoryId) {\n  const categories = data.categories;\n  return categories.find((category) => (category.id === categoryId));\n}\n\nfunction App() {\n  const categories = data.categories;\n  const [selectedCategoryId, setSelectedCategoryId] = React.useState(categories[0].id);\n  const [visibleTasks, setVisibleTasks] = React.useState(getTasksByCategory(selectedCategoryId));\n\n  const selectedCategory = getCategoryById(selectedCategoryId);\n\n  const handleTaskAdd = (task) => {\n    const id = new Date().getTime(); // Unique ID generator (not ideal)\n    const newTask = {\n      ...task,\n      id,\n      categoryId: selectedCategoryId\n    };\n    data.tasks.push(newTask);\n    setVisibleTasks(getTasksByCategory(selectedCategoryId));\n  }\n\n  const handleTaskCheck = (taskId) => {\n    const taskList = data.tasks;\n    const selectedTask = taskList.find((task) => (task.id === taskId));\n    console.log('before', selectedTask.completed);\n    selectedTask.completed = !selectedTask.completed;\n    console.log('after', selectedTask.completed);\n    setVisibleTasks(getTasksByCategory(selectedCategoryId));\n  }\n\n  const handleTaskDelete = (taskId) => {\n    const taskList = data.tasks;\n    const selectedTaskIdx = taskList.findIndex((task) => (task.id === taskId));\n    const newTaskList = [...taskList];\n    newTaskList.splice(selectedTaskIdx, 1);\n    data.tasks = newTaskList;\n    setVisibleTasks(getTasksByCategory(selectedCategoryId));\n  }\n\n  const handleCategorySelect = (categoryId) => {\n    const taskList = getTasksByCategory(categoryId);\n    setSelectedCategoryId(categoryId);\n    setVisibleTasks(taskList);\n  }\n\n  const handleCategoryAdd = (category) => {\n    const id = new Date().getTime();  // Unique ID generator (not ideal)\n    const newCategory = {\n      ...category,\n      id\n    }\n    data.categories.push(newCategory);\n    handleCategorySelect(id);\n  }\n\n  return (\n    <div className=\"App\">\n      <CategoryList\n        list={categories}\n        selected={selectedCategoryId}\n        onSelect={handleCategorySelect}\n        onAdd={handleCategoryAdd}\n      />\n      <TaskList\n        title={selectedCategory.name}\n        list={visibleTasks}\n        onCheck={handleTaskCheck}\n        onDelete={handleTaskDelete}\n        onAdd={handleTaskAdd}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}